/**
 *----------------------------------------------
 * Author: lenon
 * Create Time: 2016/3/2 10:47
 * Desc: (负责进程服务类加载)
 * Changed list:
 *        Change author:(若修改请指明修改者)
 *        Change desc:(修改描叙)
 *        Change time:(修改的时间)
 *----------------------------------------------
 **/

var sysConst = require('./../const/sysConst');
var lifecycleservices = require('./../services/lifecycleservices');
var serverservices = require('./../services/serverservices');

module.exports = function (app, opts) {
    return new Component(app, opts);
};

var assembleFun = function(self, methodName, hasCallback){
    var fun = self.app.lifecycleCbs[methodName];
    if (!!fun){
        if (hasCallback){
            self.app.lifecycleCbs[methodName] = function(app, next){
                lifecycleservices[methodName](app, function(){
                    fun(app, next);
                });
            }
        } else {
            self.app.lifecycleCbs[methodName] = function(app){
                lifecycleservices[methodName](app);
                fun(app);
            }
        }
    } else {
        self.app.lifecycleCbs[methodName] = lifecycleservices[methodName];
    }
};

var Component = function (app, opts) {
    this.app = app;
    this.app.world = new serverservices(app, opts);

    // 重组生命周期函数;
    assembleFun(this, sysConst.LIFECYCLE_FUNCTION.BEFORE_STARTUP, true);
    assembleFun(this, sysConst.LIFECYCLE_FUNCTION.BEFORE_SHUTDOWN, true);
    assembleFun(this, sysConst.LIFECYCLE_FUNCTION.AFTER_STARTUP, true);
    assembleFun(this, sysConst.LIFECYCLE_FUNCTION.AFTER_START_ALL);
};

Component.prototype.name = '__servicesloader__';

